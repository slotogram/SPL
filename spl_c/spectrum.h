#ifndef _SPL_SPECTRUM_
#define _SPL_SPECTRUM_

///
/// \file  spectrum.h
/// \brief Типы данных, структуры и функции, относящиеся к спектрам.
///

#include "common.h"
#include "spl_types.h"
#include "io.h"

namespace spl {

///
/// Фильтрация потока сигнала по шкале частот.
/// Возвращает количество записанных элементов спектра.
///

size_t EXPORT filter_stream(
	IN freq_scale& sc,                ///< Шкала частот
	io::istream<signal_t>& in_str,    ///< Входной поток (сигнал)
	io::ostream<spectrum_t>& out_str, ///< Выходной поток (спектр)
	IN freq_t F,                      ///< Частота дискретизации
	IN double ksi                     ///< Величина, определяющая точность вычислений (размер окна)
);

///
/// Фильтрация в оперативной памяти.
/// Возвращает количество записанных элементов спектра.
///
/// В поле \a sp.Y память должна быть выделена перед вызовом, 
///  а также установлены поля \a sp.K и \a sp.N (см. \ref spectrum).
/// Функция проверяет правильность выделения памяти по этим полям.
///

size_t EXPORT filter_memory(
	IN freq_scale& sc, ///< Шкала резонансных частот фильтров
	IN signal& s,      ///< Входной сигнал (в памяти)
	OUT spectrum& sp,  ///< Выходной спектр (в памяти)
	IN double ksi      ///< Величина, определяющая точность вычислений (размер окна)
);

///
/// Фильтрация бинарного файла как сигнала.
/// Возвращает количество записанных элементов спектра.
///

size_t EXPORT filter_binary_file(
	IN freq_scale& sc, ///< Шкала резонансных частот фильтров
	IN char *in_file,  ///< Входной сигнал (имя файла)
	IN char *out_file, ///< Выходной спектр (имя файла)
	IN freq_t F,       ///< Частота дискретизации
	IN double ksi      ///< Величина, определяющая точность вычислений (размер окна)
);

/// 
/// Фильтрация WAV-файла.
/// Возвращает количество записанных элементов спектра.
/// 

size_t EXPORT filter_wave_file(
	IN freq_scale& sc, ///< Шкала резонансных частот фильтров
	IN char *in_file,  ///< Входной сигнал (имя файла)
	IN char *out_file, ///< Выходной спектр (имя файла)
	IN double ksi      ///< Величина, определяющая точность вычислений (размер окна)
);


/// 
/// Фильтрация WAV-файла в память.
/// Возвращает количество записанных элементов спектра.
/// 
size_t EXPORT filter_wmemory(
	IN freq_scale& sc, ///< Шкала резонансных частот фильтров
	IN char *in_file,  ///< Входной сигнал (имя файла)
	OUT spectrum& sp,  ///< Выходной спектр (в памяти)
	IN double ksi,     ///< Величина, определяющая точность вычислений (размер окна)
	IN int k			///< Каналы
	);
} // namespace spl 

#endif//_SPL_SPECTRUM_
